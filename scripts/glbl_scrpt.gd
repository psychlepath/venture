@tool
extends Node

var player : CharacterBody3D = null
var current_player_pos : Vector2 = Vector2(0.0, 0.0)
var prev_player_pos : Vector2 = Vector2(0.0, 0.0)
#var quadrant = ["ne", "se", "sw", "nw"]
var terrain_section_size : int = 512#size in metres
var quad_size : int = 32#the size of the terrain quads inside a terrain section
var chunk_size : int = 8#the size of the terrain voxel chunks in a quad
var wind_manager : Node3D = null
var water_manager : Node3D = null
var terrain_manager : Node3D = null
var terrain_view_range : int = 1024
var terrain_height_scale : float = 255.0
#the vertices required to create a 32x32 quad mesh with no direction at LOD0
var vert00 : PackedInt32Array = [
	0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
	33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,
	66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,
	99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,
	132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,
	165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,
	198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,
	231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,
	264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,
	297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,
	330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,
	363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,
	396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,
	429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,
	462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,
	495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,
	528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,
	561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,
	594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,
	627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,
	660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,
	693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,
	726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,
	759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,
	792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,
	825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,
	858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,
	891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,
	924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,
	957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,
	990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,
	1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,
	1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088
]
#the indices required to create a 32x32 quad mesh with no direction at LOD0
var ind00 : PackedInt32Array = [
	0,34,33,0,1,34,1,2,34,2,35,34,2,36,35,2,3,36,3,4,36,4,37,36,4,38,37,4,5,38,5,6,38,6,39,38,6,40,39,6,7,40,7,8,40,8,41,40,8,42,41,8,9,42,9,10,42,10,43,42,10,44,43,10,11,44,11,12,44,12,45,44,12,46,45,12,13,46,13,14,46,14,47,46,14,48,47,14,15,48,15,16,48,16,49,48,16,50,49,16,17,50,17,18,50,18,51,50,18,52,51,18,19,52,19,20,52,20,53,52,20,54,53,20,21,54,21,22,54,22,55,54,22,56,55,22,23,56,23,24,56,24,57,56,24,58,57,24,25,58,25,26,58,26,59,58,26,60,59,26,27,60,27,28,60,28,61,60,28,62,61,28,29,62,29,30,62,30,63,62,30,64,63,30,31,64,31,32,64,32,65,64,
	33,34,66,34,67,66,34,68,67,34,35,68,35,36,68,36,69,68,36,70,69,36,37,70,37,38,70,38,71,70,38,72,71,38,39,72,39,40,72,40,73,72,40,74,73,40,41,74,41,42,74,42,75,74,42,76,75,42,43,76,43,44,76,44,77,76,44,78,77,44,45,78,45,46,78,46,79,78,46,80,79,46,47,80,47,48,80,48,81,80,48,82,81,48,49,82,49,50,82,50,83,82,50,84,83,50,51,84,51,52,84,52,85,84,52,86,85,52,53,86,53,54,86,54,87,86,54,88,87,54,55,88,55,56,88,56,89,88,56,90,89,56,57,90,57,58,90,58,91,90,58,92,91,58,59,92,59,60,92,60,93,92,60,94,93,60,61,94,61,62,94,62,95,94,62,96,95,62,63,96,63,64,96,64,97,96,64,98,97,64,65,98,
	66,100,99,66,67,100,67,68,100,68,101,100,68,102,101,68,69,102,69,70,102,70,103,102,70,104,103,70,71,104,71,72,104,72,105,104,72,106,105,72,73,106,73,74,106,74,107,106,74,108,107,74,75,108,75,76,108,76,109,108,76,110,109,76,77,110,77,78,110,78,111,110,78,112,111,78,79,112,79,80,112,80,113,112,80,114,113,80,81,114,81,82,114,82,115,114,82,116,115,82,83,116,83,84,116,84,117,116,84,118,117,84,85,118,85,86,118,86,119,118,86,120,119,86,87,120,87,88,120,88,121,120,88,122,121,88,89,122,89,90,122,90,123,122,90,124,123,90,91,124,91,92,124,92,125,124,92,126,125,92,93,126,93,94,126,94,127,126,94,128,127,94,95,128,95,96,128,96,129,128,96,130,129,96,97,130,97,98,130,98,131,130,
	99,100,132,100,133,132,100,134,133,100,101,134,101,102,134,102,135,134,102,136,135,102,103,136,103,104,136,104,137,136,104,138,137,104,105,138,105,106,138,106,139,138,106,140,139,106,107,140,107,108,140,108,141,140,108,142,141,108,109,142,109,110,142,110,143,142,110,144,143,110,111,144,111,112,144,112,145,144,112,146,145,112,113,146,113,114,146,114,147,146,114,148,147,114,115,148,115,116,148,116,149,148,116,150,149,116,117,150,117,118,150,118,151,150,118,152,151,118,119,152,119,120,152,120,153,152,120,154,153,120,121,154,121,122,154,122,155,154,122,156,155,122,123,156,123,124,156,124,157,156,124,158,157,124,125,158,125,126,158,126,159,158,126,160,159,126,127,160,127,128,160,128,161,160,128,162,161,128,129,162,129,130,162,130,163,162,130,164,163,130,131,164,
	132,166,165,132,133,166,133,134,166,134,167,166,134,168,167,134,135,168,135,136,168,136,169,168,136,170,169,136,137,170,137,138,170,138,171,170,138,172,171,138,139,172,139,140,172,140,173,172,140,174,173,140,141,174,141,142,174,142,175,174,142,176,175,142,143,176,143,144,176,144,177,176,144,178,177,144,145,178,145,146,178,146,179,178,146,180,179,146,147,180,147,148,180,148,181,180,148,182,181,148,149,182,149,150,182,150,183,182,150,184,183,150,151,184,151,152,184,152,185,184,152,186,185,152,153,186,153,154,186,154,187,186,154,188,187,154,155,188,155,156,188,156,189,188,156,190,189,156,157,190,157,158,190,158,191,190,158,192,191,158,159,192,159,160,192,160,193,192,160,194,193,160,161,194,161,162,194,162,195,194,162,196,195,162,163,196,163,164,196,164,197,196,
	165,166,198,166,199,198,166,200,199,166,167,200,167,168,200,168,201,200,168,202,201,168,169,202,169,170,202,170,203,202,170,204,203,170,171,204,171,172,204,172,205,204,172,206,205,172,173,206,173,174,206,174,207,206,174,208,207,174,175,208,175,176,208,176,209,208,176,210,209,176,177,210,177,178,210,178,211,210,178,212,211,178,179,212,179,180,212,180,213,212,180,214,213,180,181,214,181,182,214,182,215,214,182,216,215,182,183,216,183,184,216,184,217,216,184,218,217,184,185,218,185,186,218,186,219,218,186,220,219,186,187,220,187,188,220,188,221,220,188,222,221,188,189,222,189,190,222,190,223,222,190,224,223,190,191,224,191,192,224,192,225,224,192,226,225,192,193,226,193,194,226,194,227,226,194,228,227,194,195,228,195,196,228,196,229,228,196,230,229,196,197,230,
	198,232,231,198,199,232,199,200,232,200,233,232,200,234,233,200,201,234,201,202,234,202,235,234,202,236,235,202,203,236,203,204,236,204,237,236,204,238,237,204,205,238,205,206,238,206,239,238,206,240,239,206,207,240,207,208,240,208,241,240,208,242,241,208,209,242,209,210,242,210,243,242,210,244,243,210,211,244,211,212,244,212,245,244,212,246,245,212,213,246,213,214,246,214,247,246,214,248,247,214,215,248,215,216,248,216,249,248,216,250,249,216,217,250,217,218,250,218,251,250,218,252,251,218,219,252,219,220,252,220,253,252,220,254,253,220,221,254,221,222,254,222,255,254,222,256,255,222,223,256,223,224,256,224,257,256,224,258,257,224,225,258,225,226,258,226,259,258,226,260,259,226,227,260,227,228,260,228,261,260,228,262,261,228,229,262,229,230,262,230,263,262,
	231,232,264,232,265,264,232,266,265,232,233,266,233,234,266,234,267,266,234,268,267,234,235,268,235,236,268,236,269,268,236,270,269,236,237,270,237,238,270,238,271,270,238,272,271,238,239,272,239,240,272,240,273,272,240,274,273,240,241,274,241,242,274,242,275,274,242,276,275,242,243,276,243,244,276,244,277,276,244,278,277,244,245,278,245,246,278,246,279,278,246,280,279,246,247,280,247,248,280,248,281,280,248,282,281,248,249,282,249,250,282,250,283,282,250,284,283,250,251,284,251,252,284,252,285,284,252,286,285,252,253,286,253,254,286,254,287,286,254,288,287,254,255,288,255,256,288,256,289,288,256,290,289,256,257,290,257,258,290,258,291,290,258,292,291,258,259,292,259,260,292,260,293,292,260,294,293,260,261,294,261,262,294,262,295,294,262,296,295,262,263,296,
	264,298,297,264,265,298,265,266,298,266,299,298,266,300,299,266,267,300,267,268,300,268,301,300,268,302,301,268,269,302,269,270,302,270,303,302,270,304,303,270,271,304,271,272,304,272,305,304,272,306,305,272,273,306,273,274,306,274,307,306,274,308,307,274,275,308,275,276,308,276,309,308,276,310,309,276,277,310,277,278,310,278,311,310,278,312,311,278,279,312,279,280,312,280,313,312,280,314,313,280,281,314,281,282,314,282,315,314,282,316,315,282,283,316,283,284,316,284,317,316,284,318,317,284,285,318,285,286,318,286,319,318,286,320,319,286,287,320,287,288,320,288,321,320,288,322,321,288,289,322,289,290,322,290,323,322,290,324,323,290,291,324,291,292,324,292,325,324,292,326,325,292,293,326,293,294,326,294,327,326,294,328,327,294,295,328,295,296,328,296,329,328,
	297,298,330,298,331,330,298,332,331,298,299,332,299,300,332,300,333,332,300,334,333,300,301,334,301,302,334,302,335,334,302,336,335,302,303,336,303,304,336,304,337,336,304,338,337,304,305,338,305,306,338,306,339,338,306,340,339,306,307,340,307,308,340,308,341,340,308,342,341,308,309,342,309,310,342,310,343,342,310,344,343,310,311,344,311,312,344,312,345,344,312,346,345,312,313,346,313,314,346,314,347,346,314,348,347,314,315,348,315,316,348,316,349,348,316,350,349,316,317,350,317,318,350,318,351,350,318,352,351,318,319,352,319,320,352,320,353,352,320,354,353,320,321,354,321,322,354,322,355,354,322,356,355,322,323,356,323,324,356,324,357,356,324,358,357,324,325,358,325,326,358,326,359,358,326,360,359,326,327,360,327,328,360,328,361,360,328,362,361,328,329,362,
	330,364,363,330,331,364,331,332,364,332,365,364,332,366,365,332,333,366,333,334,366,334,367,366,334,368,367,334,335,368,335,336,368,336,369,368,336,370,369,336,337,370,337,338,370,338,371,370,338,372,371,338,339,372,339,340,372,340,373,372,340,374,373,340,341,374,341,342,374,342,375,374,342,376,375,342,343,376,343,344,376,344,377,376,344,378,377,344,345,378,345,346,378,346,379,378,346,380,379,346,347,380,347,348,380,348,381,380,348,382,381,348,349,382,349,350,382,350,383,382,350,384,383,350,351,384,351,352,384,352,385,384,352,386,385,352,353,386,353,354,386,354,387,386,354,388,387,354,355,388,355,356,388,356,389,388,356,390,389,356,357,390,357,358,390,358,391,390,358,392,391,358,359,392,359,360,392,360,393,392,360,394,393,360,361,394,361,362,394,362,395,394,
	363,364,396,364,397,396,364,398,397,364,365,398,365,366,398,366,399,398,366,400,399,366,367,400,367,368,400,368,401,400,368,402,401,368,369,402,369,370,402,370,403,402,370,404,403,370,371,404,371,372,404,372,405,404,372,406,405,372,373,406,373,374,406,374,407,406,374,408,407,374,375,408,375,376,408,376,409,408,376,410,409,376,377,410,377,378,410,378,411,410,378,412,411,378,379,412,379,380,412,380,413,412,380,414,413,380,381,414,381,382,414,382,415,414,382,416,415,382,383,416,383,384,416,384,417,416,384,418,417,384,385,418,385,386,418,386,419,418,386,420,419,386,387,420,387,388,420,388,421,420,388,422,421,388,389,422,389,390,422,390,423,422,390,424,423,390,391,424,391,392,424,392,425,424,392,426,425,392,393,426,393,394,426,394,427,426,394,428,427,394,395,428,
	396,430,429,396,397,430,397,398,430,398,431,430,398,432,431,398,399,432,399,400,432,400,433,432,400,434,433,400,401,434,401,402,434,402,435,434,402,436,435,402,403,436,403,404,436,404,437,436,404,438,437,404,405,438,405,406,438,406,439,438,406,440,439,406,407,440,407,408,440,408,441,440,408,442,441,408,409,442,409,410,442,410,443,442,410,444,443,410,411,444,411,412,444,412,445,444,412,446,445,412,413,446,413,414,446,414,447,446,414,448,447,414,415,448,415,416,448,416,449,448,416,450,449,416,417,450,417,418,450,418,451,450,418,452,451,418,419,452,419,420,452,420,453,452,420,454,453,420,421,454,421,422,454,422,455,454,422,456,455,422,423,456,423,424,456,424,457,456,424,458,457,424,425,458,425,426,458,426,459,458,426,460,459,426,427,460,427,428,460,428,461,460,
	429,430,462,430,463,462,430,464,463,430,431,464,431,432,464,432,465,464,432,466,465,432,433,466,433,434,466,434,467,466,434,468,467,434,435,468,435,436,468,436,469,468,436,470,469,436,437,470,437,438,470,438,471,470,438,472,471,438,439,472,439,440,472,440,473,472,440,474,473,440,441,474,441,442,474,442,475,474,442,476,475,442,443,476,443,444,476,444,477,476,444,478,477,444,445,478,445,446,478,446,479,478,446,480,479,446,447,480,447,448,480,448,481,480,448,482,481,448,449,482,449,450,482,450,483,482,450,484,483,450,451,484,451,452,484,452,485,484,452,486,485,452,453,486,453,454,486,454,487,486,454,488,487,454,455,488,455,456,488,456,489,488,456,490,489,456,457,490,457,458,490,458,491,490,458,492,491,458,459,492,459,460,492,460,493,492,460,494,493,460,461,494,
	462,496,495,462,463,496,463,464,496,464,497,496,464,498,497,464,465,498,465,466,498,466,499,498,466,500,499,466,467,500,467,468,500,468,501,500,468,502,501,468,469,502,469,470,502,470,503,502,470,504,503,470,471,504,471,472,504,472,505,504,472,506,505,472,473,506,473,474,506,474,507,506,474,508,507,474,475,508,475,476,508,476,509,508,476,510,509,476,477,510,477,478,510,478,511,510,478,512,511,478,479,512,479,480,512,480,513,512,480,514,513,480,481,514,481,482,514,482,515,514,482,516,515,482,483,516,483,484,516,484,517,516,484,518,517,484,485,518,485,486,518,486,519,518,486,520,519,486,487,520,487,488,520,488,521,520,488,522,521,488,489,522,489,490,522,490,523,522,490,524,523,490,491,524,491,492,524,492,525,524,492,526,525,492,493,526,493,494,526,494,527,526,
	495,496,528,496,529,528,496,530,529,496,497,530,497,498,530,498,531,530,498,532,531,498,499,532,499,500,532,500,533,532,500,534,533,500,501,534,501,502,534,502,535,534,502,536,535,502,503,536,503,504,536,504,537,536,504,538,537,504,505,538,505,506,538,506,539,538,506,540,539,506,507,540,507,508,540,508,541,540,508,542,541,508,509,542,509,510,542,510,543,542,510,544,543,510,511,544,511,512,544,512,545,544,512,546,545,512,513,546,513,514,546,514,547,546,514,548,547,514,515,548,515,516,548,516,549,548,516,550,549,516,517,550,517,518,550,518,551,550,518,552,551,518,519,552,519,520,552,520,553,552,520,554,553,520,521,554,521,522,554,522,555,554,522,556,555,522,523,556,523,524,556,524,557,556,524,558,557,524,525,558,525,526,558,526,559,558,526,560,559,526,527,560,
	528,562,561,528,529,562,529,530,562,530,563,562,530,564,563,530,531,564,531,532,564,532,565,564,532,566,565,532,533,566,533,534,566,534,567,566,534,568,567,534,535,568,535,536,568,536,569,568,536,570,569,536,537,570,537,538,570,538,571,570,538,572,571,538,539,572,539,540,572,540,573,572,540,574,573,540,541,574,541,542,574,542,575,574,542,576,575,542,543,576,543,544,576,544,577,576,544,578,577,544,545,578,545,546,578,546,579,578,546,580,579,546,547,580,547,548,580,548,581,580,548,582,581,548,549,582,549,550,582,550,583,582,550,584,583,550,551,584,551,552,584,552,585,584,552,586,585,552,553,586,553,554,586,554,587,586,554,588,587,554,555,588,555,556,588,556,589,588,556,590,589,556,557,590,557,558,590,558,591,590,558,592,591,558,559,592,559,560,592,560,593,592,
	561,562,594,562,595,594,562,596,595,562,563,596,563,564,596,564,597,596,564,598,597,564,565,598,565,566,598,566,599,598,566,600,599,566,567,600,567,568,600,568,601,600,568,602,601,568,569,602,569,570,602,570,603,602,570,604,603,570,571,604,571,572,604,572,605,604,572,606,605,572,573,606,573,574,606,574,607,606,574,608,607,574,575,608,575,576,608,576,609,608,576,610,609,576,577,610,577,578,610,578,611,610,578,612,611,578,579,612,579,580,612,580,613,612,580,614,613,580,581,614,581,582,614,582,615,614,582,616,615,582,583,616,583,584,616,584,617,616,584,618,617,584,585,618,585,586,618,586,619,618,586,620,619,586,587,620,587,588,620,588,621,620,588,622,621,588,589,622,589,590,622,590,623,622,590,624,623,590,591,624,591,592,624,592,625,624,592,626,625,592,593,626,
	594,628,627,594,595,628,595,596,628,596,629,628,596,630,629,596,597,630,597,598,630,598,631,630,598,632,631,598,599,632,599,600,632,600,633,632,600,634,633,600,601,634,601,602,634,602,635,634,602,636,635,602,603,636,603,604,636,604,637,636,604,638,637,604,605,638,605,606,638,606,639,638,606,640,639,606,607,640,607,608,640,608,641,640,608,642,641,608,609,642,609,610,642,610,643,642,610,644,643,610,611,644,611,612,644,612,645,644,612,646,645,612,613,646,613,614,646,614,647,646,614,648,647,614,615,648,615,616,648,616,649,648,616,650,649,616,617,650,617,618,650,618,651,650,618,652,651,618,619,652,619,620,652,620,653,652,620,654,653,620,621,654,621,622,654,622,655,654,622,656,655,622,623,656,623,624,656,624,657,656,624,658,657,624,625,658,625,626,658,626,659,658,
	627,628,660,628,661,660,628,662,661,628,629,662,629,630,662,630,663,662,630,664,663,630,631,664,631,632,664,632,665,664,632,666,665,632,633,666,633,634,666,634,667,666,634,668,667,634,635,668,635,636,668,636,669,668,636,670,669,636,637,670,637,638,670,638,671,670,638,672,671,638,639,672,639,640,672,640,673,672,640,674,673,640,641,674,641,642,674,642,675,674,642,676,675,642,643,676,643,644,676,644,677,676,644,678,677,644,645,678,645,646,678,646,679,678,646,680,679,646,647,680,647,648,680,648,681,680,648,682,681,648,649,682,649,650,682,650,683,682,650,684,683,650,651,684,651,652,684,652,685,684,652,686,685,652,653,686,653,654,686,654,687,686,654,688,687,654,655,688,655,656,688,656,689,688,656,690,689,656,657,690,657,658,690,658,691,690,658,692,691,658,659,692,
	660,694,693,660,661,694,661,662,694,662,695,694,662,696,695,662,663,696,663,664,696,664,697,696,664,698,697,664,665,698,665,666,698,666,699,698,666,700,699,666,667,700,667,668,700,668,701,700,668,702,701,668,669,702,669,670,702,670,703,702,670,704,703,670,671,704,671,672,704,672,705,704,672,706,705,672,673,706,673,674,706,674,707,706,674,708,707,674,675,708,675,676,708,676,709,708,676,710,709,676,677,710,677,678,710,678,711,710,678,712,711,678,679,712,679,680,712,680,713,712,680,714,713,680,681,714,681,682,714,682,715,714,682,716,715,682,683,716,683,684,716,684,717,716,684,718,717,684,685,718,685,686,718,686,719,718,686,720,719,686,687,720,687,688,720,688,721,720,688,722,721,688,689,722,689,690,722,690,723,722,690,724,723,690,691,724,691,692,724,692,725,724,
	693,694,726,694,727,726,694,728,727,694,695,728,695,696,728,696,729,728,696,730,729,696,697,730,697,698,730,698,731,730,698,732,731,698,699,732,699,700,732,700,733,732,700,734,733,700,701,734,701,702,734,702,735,734,702,736,735,702,703,736,703,704,736,704,737,736,704,738,737,704,705,738,705,706,738,706,739,738,706,740,739,706,707,740,707,708,740,708,741,740,708,742,741,708,709,742,709,710,742,710,743,742,710,744,743,710,711,744,711,712,744,712,745,744,712,746,745,712,713,746,713,714,746,714,747,746,714,748,747,714,715,748,715,716,748,716,749,748,716,750,749,716,717,750,717,718,750,718,751,750,718,752,751,718,719,752,719,720,752,720,753,752,720,754,753,720,721,754,721,722,754,722,755,754,722,756,755,722,723,756,723,724,756,724,757,756,724,758,757,724,725,758,
	726,760,759,726,727,760,727,728,760,728,761,760,728,762,761,728,729,762,729,730,762,730,763,762,730,764,763,730,731,764,731,732,764,732,765,764,732,766,765,732,733,766,733,734,766,734,767,766,734,768,767,734,735,768,735,736,768,736,769,768,736,770,769,736,737,770,737,738,770,738,771,770,738,772,771,738,739,772,739,740,772,740,773,772,740,774,773,740,741,774,741,742,774,742,775,774,742,776,775,742,743,776,743,744,776,744,777,776,744,778,777,744,745,778,745,746,778,746,779,778,746,780,779,746,747,780,747,748,780,748,781,780,748,782,781,748,749,782,749,750,782,750,783,782,750,784,783,750,751,784,751,752,784,752,785,784,752,786,785,752,753,786,753,754,786,754,787,786,754,788,787,754,755,788,755,756,788,756,789,788,756,790,789,756,757,790,757,758,790,758,791,790,
	759,760,792,760,793,792,760,794,793,760,761,794,761,762,794,762,795,794,762,796,795,762,763,796,763,764,796,764,797,796,764,798,797,764,765,798,765,766,798,766,799,798,766,800,799,766,767,800,767,768,800,768,801,800,768,802,801,768,769,802,769,770,802,770,803,802,770,804,803,770,771,804,771,772,804,772,805,804,772,806,805,772,773,806,773,774,806,774,807,806,774,808,807,774,775,808,775,776,808,776,809,808,776,810,809,776,777,810,777,778,810,778,811,810,778,812,811,778,779,812,779,780,812,780,813,812,780,814,813,780,781,814,781,782,814,782,815,814,782,816,815,782,783,816,783,784,816,784,817,816,784,818,817,784,785,818,785,786,818,786,819,818,786,820,819,786,787,820,787,788,820,788,821,820,788,822,821,788,789,822,789,790,822,790,823,822,790,824,823,790,791,824,
	792,826,825,792,793,826,793,794,826,794,827,826,794,828,827,794,795,828,795,796,828,796,829,828,796,830,829,796,797,830,797,798,830,798,831,830,798,832,831,798,799,832,799,800,832,800,833,832,800,834,833,800,801,834,801,802,834,802,835,834,802,836,835,802,803,836,803,804,836,804,837,836,804,838,837,804,805,838,805,806,838,806,839,838,806,840,839,806,807,840,807,808,840,808,841,840,808,842,841,808,809,842,809,810,842,810,843,842,810,844,843,810,811,844,811,812,844,812,845,844,812,846,845,812,813,846,813,814,846,814,847,846,814,848,847,814,815,848,815,816,848,816,849,848,816,850,849,816,817,850,817,818,850,818,851,850,818,852,851,818,819,852,819,820,852,820,853,852,820,854,853,820,821,854,821,822,854,822,855,854,822,856,855,822,823,856,823,824,856,824,857,856,
	825,826,858,826,859,858,826,860,859,826,827,860,827,828,860,828,861,860,828,862,861,828,829,862,829,830,862,830,863,862,830,864,863,830,831,864,831,832,864,832,865,864,832,866,865,832,833,866,833,834,866,834,867,866,834,868,867,834,835,868,835,836,868,836,869,868,836,870,869,836,837,870,837,838,870,838,871,870,838,872,871,838,839,872,839,840,872,840,873,872,840,874,873,840,841,874,841,842,874,842,875,874,842,876,875,842,843,876,843,844,876,844,877,876,844,878,877,844,845,878,845,846,878,846,879,878,846,880,879,846,847,880,847,848,880,848,881,880,848,882,881,848,849,882,849,850,882,850,883,882,850,884,883,850,851,884,851,852,884,852,885,884,852,886,885,852,853,886,853,854,886,854,887,886,854,888,887,854,855,888,855,856,888,856,889,888,856,890,889,856,857,890,
	858,892,891,858,859,892,859,860,892,860,893,892,860,894,893,860,861,894,861,862,894,862,895,894,862,896,895,862,863,896,863,864,896,864,897,896,864,898,897,864,865,898,865,866,898,866,899,898,866,900,899,866,867,900,867,868,900,868,901,900,868,902,901,868,869,902,869,870,902,870,903,902,870,904,903,870,871,904,871,872,904,872,905,904,872,906,905,872,873,906,873,874,906,874,907,906,874,908,907,874,875,908,875,876,908,876,909,908,876,910,909,876,877,910,877,878,910,878,911,910,878,912,911,878,879,912,879,880,912,880,913,912,880,914,913,880,881,914,881,882,914,882,915,914,882,916,915,882,883,916,883,884,916,884,917,916,884,918,917,884,885,918,885,886,918,886,919,918,886,920,919,886,887,920,887,888,920,888,921,920,888,922,921,888,889,922,889,890,922,890,923,922,
	891,892,924,892,925,924,892,926,925,892,893,926,893,894,926,894,927,926,894,928,927,894,895,928,895,896,928,896,929,928,896,930,929,896,897,930,897,898,930,898,931,930,898,932,931,898,899,932,899,900,932,900,933,932,900,934,933,900,901,934,901,902,934,902,935,934,902,936,935,902,903,936,903,904,936,904,937,936,904,938,937,904,905,938,905,906,938,906,939,938,906,940,939,906,907,940,907,908,940,908,941,940,908,942,941,908,909,942,909,910,942,910,943,942,910,944,943,910,911,944,911,912,944,912,945,944,912,946,945,912,913,946,913,914,946,914,947,946,914,948,947,914,915,948,915,916,948,916,949,948,916,950,949,916,917,950,917,918,950,918,951,950,918,952,951,918,919,952,919,920,952,920,953,952,920,954,953,920,921,954,921,922,954,922,955,954,922,956,955,922,923,956,
	924,958,957,924,925,958,925,926,958,926,959,958,926,960,959,926,927,960,927,928,960,928,961,960,928,962,961,928,929,962,929,930,962,930,963,962,930,964,963,930,931,964,931,932,964,932,965,964,932,966,965,932,933,966,933,934,966,934,967,966,934,968,967,934,935,968,935,936,968,936,969,968,936,970,969,936,937,970,937,938,970,938,971,970,938,972,971,938,939,972,939,940,972,940,973,972,940,974,973,940,941,974,941,942,974,942,975,974,942,976,975,942,943,976,943,944,976,944,977,976,944,978,977,944,945,978,945,946,978,946,979,978,946,980,979,946,947,980,947,948,980,948,981,980,948,982,981,948,949,982,949,950,982,950,983,982,950,984,983,950,951,984,951,952,984,952,985,984,952,986,985,952,953,986,953,954,986,954,987,986,954,988,987,954,955,988,955,956,988,956,989,988,
	957,958,990,958,991,990,958,992,991,958,959,992,959,960,992,960,993,992,960,994,993,960,961,994,961,962,994,962,995,994,962,996,995,962,963,996,963,964,996,964,997,996,964,998,997,964,965,998,965,966,998,966,999,998,966,1000,999,966,967,1000,967,968,1000,968,1001,1000,968,1002,1001,968,969,1002,969,970,1002,970,1003,1002,970,1004,1003,970,971,1004,971,972,1004,972,1005,1004,972,1006,1005,972,973,1006,973,974,1006,974,1007,1006,974,1008,1007,974,975,1008,975,976,1008,976,1009,1008,976,1010,1009,976,977,1010,977,978,1010,978,1011,1010,978,1012,1011,978,979,1012,979,980,1012,980,1013,1012,980,1014,1013,980,981,1014,981,982,1014,982,1015,1014,982,1016,1015,982,983,1016,983,984,1016,984,1017,1016,984,1018,1017,984,985,1018,985,986,1018,986,1019,1018,986,1020,1019,986,987,1020,987,988,1020,988,1021,1020,988,1022,1021,988,989,1022,
	990,1024,1023,990,991,1024,991,992,1024,992,1025,1024,992,1026,1025,992,993,1026,993,994,1026,994,1027,1026,994,1028,1027,994,995,1028,995,996,1028,996,1029,1028,996,1030,1029,996,997,1030,997,998,1030,998,1031,1030,998,1032,1031,998,999,1032,999,1000,1032,1000,1033,1032,1000,1034,1033,1000,1001,1034,1001,1002,1034,1002,1035,1034,1002,1036,1035,1002,1003,1036,1003,1004,1036,1004,1037,1036,1004,1038,1037,1004,1005,1038,1005,1006,1038,1006,1039,1038,1006,1040,1039,1006,1007,1040,1007,1008,1040,1008,1041,1040,1008,1042,1041,1008,1009,1042,1009,1010,1042,1010,1043,1042,1010,1044,1043,1010,1011,1044,1011,1012,1044,1012,1045,1044,1012,1046,1045,1012,1013,1046,1013,1014,1046,1014,1047,1046,1014,1048,1047,1014,1015,1048,1015,1016,1048,1016,1049,1048,1016,1050,1049,1016,1017,1050,1017,1018,1050,1018,1051,1050,1018,1052,1051,1018,1019,1052,1019,1020,1052,1020,1053,1052,1020,1054,1053,1020,1021,1054,1021,1022,1054,1022,1055,1054,
	1023,1024,1056,1024,1057,1056,1024,1058,1057,1024,1025,1058,1025,1026,1058,1026,1059,1058,1026,1060,1059,1026,1027,1060,1027,1028,1060,1028,1061,1060,1028,1062,1061,1028,1029,1062,1029,1030,1062,1030,1063,1062,1030,1064,1063,1030,1031,1064,1031,1032,1064,1032,1065,1064,1032,1066,1065,1032,1033,1066,1033,1034,1066,1034,1067,1066,1034,1068,1067,1034,1035,1068,1035,1036,1068,1036,1069,1068,1036,1070,1069,1036,1037,1070,1037,1038,1070,1038,1071,1070,1038,1072,1071,1038,1039,1072,1039,1040,1072,1040,1073,1072,1040,1074,1073,1040,1041,1074,1041,1042,1074,1042,1075,1074,1042,1076,1075,1042,1043,1076,1043,1044,1076,1044,1077,1076,1044,1078,1077,1044,1045,1078,1045,1046,1078,1046,1079,1078,1046,1080,1079,1046,1047,1080,1047,1048,1080,1048,1081,1080,1048,1082,1081,1048,1049,1082,1049,1050,1082,1050,1083,1082,1050,1084,1083,1050,1051,1084,1051,1052,1084,1052,1085,1084,1052,1086,1085,1052,1053,1086,1053,1054,1086,1054,1087,1086,1054,1088,1087,1054,1055,1088
]
#the vertices required to create a 32x32 quad mesh with no direction at LOD1
var vert01 : PackedInt32Array = [
	0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,
	66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,
	132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,
	198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,
	264,266,268,270,272,274,276,278,280,282,284,286,288,290,292,294,296,
	330,332,334,336,338,340,342,344,346,348,350,352,354,356,358,360,362,
	396,398,400,402,404,406,408,410,412,414,416,418,420,422,424,426,428,
	462,464,466,468,470,472,474,476,478,480,482,484,486,488,490,492,494,
	528,530,532,534,536,538,540,542,544,546,548,550,552,554,556,558,560,
	594,596,598,600,602,604,606,608,610,612,614,616,618,620,622,624,626,
	660,662,664,666,668,670,672,674,676,678,680,682,684,686,688,690,692,
	726,728,730,732,734,736,738,740,742,744,746,748,750,752,754,756,758,
	792,794,796,798,800,802,804,806,808,810,812,814,816,818,820,822,824,
	858,860,862,864,866,868,870,872,874,876,878,880,882,884,886,888,890,
	924,926,928,930,932,934,936,938,940,942,944,946,948,950,952,954,956,
	990,992,994,996,998,1000,1002,1004,1006,1008,1010,1012,1014,1016,1018,1020,1022,
	1056,1058,1060,1062,1064,1066,1068,1070,1072,1074,1076,1078,1080,1082,1084,1086,1088
]
#the indices required to create a 32x32 quad mesh with no direction at LOD1
var ind01 : PackedInt32Array = [
	0,18,17,0,1,18,1,2,18,2,19,18,2,20,19,2,3,20,3,4,20,4,21,20,4,22,21,4,5,22,5,6,22,6,23,22,6,24,23,6,7,24,7,8,24,8,25,24,8,26,25,8,9,26,9,10,26,10,27,26,10,28,27,10,11,28,11,12,28,12,29,28,12,30,29,12,13,30,13,14,30,14,31,30,14,32,31,14,15,32,15,16,32,16,33,32,
	17,18,34,18,35,34,18,36,35,18,19,36,19,20,36,20,37,36,20,38,37,20,21,38,21,22,38,22,39,38,22,40,39,22,23,40,23,24,40,24,41,40,24,42,41,24,25,42,25,26,42,26,43,42,26,44,43,26,27,44,27,28,44,28,45,44,28,46,45,28,29,46,29,30,46,30,47,46,30,48,47,30,31,48,31,32,48,32,49,48,32,50,49,32,33,50,
	34,52,51,34,35,52,35,36,52,36,53,52,36,54,53,36,37,54,37,38,54,38,55,54,38,56,55,38,39,56,39,40,56,40,57,56,40,58,57,40,41,58,41,42,58,42,59,58,42,60,59,42,43,60,43,44,60,44,61,60,44,62,61,44,45,62,45,46,62,46,63,62,46,64,63,46,47,64,47,48,64,48,65,64,48,66,65,48,49,66,49,50,66,50,67,66,
	51,52,68,52,69,68,52,70,69,52,53,70,53,54,70,54,71,70,54,72,71,54,55,72,55,56,72,56,73,72,56,74,73,56,57,74,57,58,74,58,75,74,58,76,75,58,59,76,59,60,76,60,77,76,60,78,77,60,61,78,61,62,78,62,79,78,62,80,79,62,63,80,63,64,80,64,81,80,64,82,81,64,65,82,65,66,82,66,83,82,66,84,83,66,67,84,
	68,86,85,68,69,86,69,70,86,70,87,86,70,88,87,70,71,88,71,72,88,72,89,88,72,90,89,72,73,90,73,74,90,74,91,90,74,92,91,74,75,92,75,76,92,76,93,92,76,94,93,76,77,94,77,78,94,78,95,94,78,96,95,78,79,96,79,80,96,80,97,96,80,98,97,80,81,98,81,82,98,82,99,98,82,100,99,82,83,100,83,84,100,84,101,100,
	85,86,102,86,103,102,86,104,103,86,87,104,87,88,104,88,105,104,88,106,105,88,89,106,89,90,106,90,107,106,90,108,107,90,91,108,91,92,108,92,109,108,92,110,109,92,93,110,93,94,110,94,111,110,94,112,111,94,95,112,95,96,112,96,113,112,96,114,113,96,97,114,97,98,114,98,115,114,98,116,115,98,99,116,99,100,116,100,117,116,100,118,117,100,101,118,
	102,120,119,102,103,120,103,104,120,104,121,120,104,122,121,104,105,122,105,106,122,106,123,122,106,124,123,106,107,124,107,108,124,108,125,124,108,126,125,108,109,126,109,110,126,110,127,126,110,128,127,110,111,128,111,112,128,112,129,128,112,130,129,112,113,130,113,114,130,114,131,130,114,132,131,114,115,132,115,116,132,116,133,132,116,134,133,116,117,134,117,118,134,118,135,134,
	119,120,136,120,137,136,120,138,137,120,121,138,121,122,138,122,139,138,122,140,139,122,123,140,123,124,140,124,141,140,124,142,141,124,125,142,125,126,142,126,143,142,126,144,143,126,127,144,127,128,144,128,145,144,128,146,145,128,129,146,129,130,146,130,147,146,130,148,147,130,131,148,131,132,148,132,149,148,132,150,149,132,133,150,133,134,150,134,151,150,134,152,151,134,135,152,
	136,154,153,136,137,154,137,138,154,138,155,154,138,156,155,138,139,156,139,140,156,140,157,156,140,158,157,140,141,158,141,142,158,142,159,158,142,160,159,142,143,160,143,144,160,144,161,160,144,162,161,144,145,162,145,146,162,146,163,162,146,164,163,146,147,164,147,148,164,148,165,164,148,166,165,148,149,166,149,150,166,150,167,166,150,168,167,150,151,168,151,152,168,152,169,168,
	153,154,170,154,171,170,154,172,171,154,155,172,155,156,172,156,173,172,156,174,173,156,157,174,157,158,174,158,175,174,158,176,175,158,159,176,159,160,176,160,177,176,160,178,177,160,161,178,161,162,178,162,179,178,162,180,179,162,163,180,163,164,180,164,181,180,164,182,181,164,165,182,165,166,182,166,183,182,166,184,183,166,167,184,167,168,184,168,185,184,168,186,185,168,169,186,
	170,188,187,170,171,188,171,172,188,172,189,188,172,190,189,172,173,190,173,174,190,174,191,190,174,192,191,174,175,192,175,176,192,176,193,192,176,194,193,176,177,194,177,178,194,178,195,194,178,196,195,178,179,196,179,180,196,180,197,196,180,198,197,180,181,198,181,182,198,182,199,198,182,200,199,182,183,200,183,184,200,184,201,200,184,202,201,184,185,202,185,186,202,186,203,202,
	187,188,204,188,205,204,188,206,205,188,189,206,189,190,206,190,207,206,190,208,207,190,191,208,191,192,208,192,209,208,192,210,209,192,193,210,193,194,210,194,211,210,194,212,211,194,195,212,195,196,212,196,213,212,196,214,213,196,197,214,197,198,214,198,215,214,198,216,215,198,199,216,199,200,216,200,217,216,200,218,217,200,201,218,201,202,218,202,219,218,202,220,219,202,203,220,
	204,222,221,204,205,222,205,206,222,206,223,222,206,224,223,206,207,224,207,208,224,208,225,224,208,226,225,208,209,226,209,210,226,210,227,226,210,228,227,210,211,228,211,212,228,212,229,228,212,230,229,212,213,230,213,214,230,214,231,230,214,232,231,214,215,232,215,216,232,216,233,232,216,234,233,216,217,234,217,218,234,218,235,234,218,236,235,218,219,236,219,220,236,220,237,236,
	221,222,238,222,239,238,222,240,239,222,223,240,223,224,240,224,241,240,224,242,241,224,225,242,225,226,242,226,243,242,226,244,243,226,227,244,227,228,244,228,245,244,228,246,245,228,229,246,229,230,246,230,247,246,230,248,247,230,231,248,231,232,248,232,249,248,232,250,249,232,233,250,233,234,250,234,251,250,234,252,251,234,235,252,235,236,252,236,253,252,236,254,253,236,237,254,
	238,256,255,238,239,256,239,240,256,240,257,256,240,258,257,240,241,258,241,242,258,242,259,258,242,260,259,242,243,260,243,244,260,244,261,260,244,262,261,244,245,262,245,246,262,246,263,262,246,264,263,246,247,264,247,248,264,248,265,264,248,266,265,248,249,266,249,250,266,250,267,266,250,268,267,250,251,268,251,252,268,252,269,268,252,270,269,252,253,270,253,254,270,254,271,270,
	255,256,272,256,273,272,256,274,273,256,257,274,257,258,274,258,275,274,258,276,275,258,259,276,259,260,276,260,277,276,260,278,277,260,261,278,261,262,278,262,279,278,262,280,279,262,263,280,263,264,280,264,281,280,264,282,281,264,265,282,265,266,282,266,283,282,266,284,283,266,267,284,267,268,284,268,285,284,268,286,285,268,269,286,269,270,286,270,287,286,270,288,287,270,271,288
]

#the vertices required to create a 32x32 quad mesh with no direction at LOD2
var vert02 : PackedInt32Array = [
	0,4,8,12,16,20,24,28,32,
	132,136,140,144,148,152,156,160,164,
	264,268,272,276,280,284,288,292,296,
	396,400,404,408,412,416,420,424,428,
	528,532,536,540,544,548,552,556,560,
	660,664,668,672,676,680,684,688,692,
	792,796,800,804,808,812,816,820,824,
	924,928,932,936,940,944,948,952,956,
	1056,1060,1064,1068,1072,1076,1080,1084,1088
]
#the indices required to create a 32x32 quad mesh with no direction at LOD2
var ind02 : PackedInt32Array = [
	0,10,9,0,1,10,1,2,10,2,11,10,2,12,11,2,3,12,3,4,12,4,13,12,4,14,13,4,5,14,5,6,14,6,15,14,6,16,15,6,7,16,7,8,16,8,17,16,
	9,10,18,10,19,18,10,20,19,10,11,20,11,12,20,12,21,20,12,22,21,12,13,22,13,14,22,14,23,22,14,24,23,14,15,24,15,16,24,16,25,24,16,26,25,16,17,26,
	18,28,27,18,19,28,19,20,28,20,29,28,20,30,29,20,21,30,21,22,30,22,31,30,22,32,31,22,23,32,23,24,32,24,33,32,24,34,33,24,25,34,25,26,34,26,35,34,
	27,28,36,28,37,36,28,38,37,28,29,38,29,30,38,30,39,38,30,40,39,30,31,40,31,32,40,32,41,40,32,42,41,32,33,42,33,34,42,34,43,42,34,44,43,34,35,44,
	36,46,45,36,37,46,37,38,46,38,47,46,38,48,47,38,39,48,39,40,48,40,49,48,40,50,49,40,41,50,41,42,50,42,51,50,42,52,51,42,43,52,43,44,52,44,53,52,
	45,46,54,46,55,54,46,56,55,46,47,56,47,48,56,48,57,56,48,58,57,48,49,58,49,50,58,50,59,58,50,60,59,50,51,60,51,52,60,52,61,60,52,62,61,52,53,62,
	54,64,63,54,55,64,55,56,64,56,65,64,56,66,65,56,57,66,57,58,66,58,67,66,58,68,67,58,59,68,59,60,68,60,69,68,60,70,69,60,61,70,61,62,70,62,71,70,
	63,64,72,64,73,72,64,74,73,64,65,74,65,66,74,66,75,74,66,76,75,66,67,76,67,68,76,68,77,76,68,78,77,68,69,78,69,70,78,70,79,78,70,80,79,70,71,80
]

#the vertices required to create a 32x32 quad mesh with no direction at LOD3
var vert03 : PackedInt32Array = [
	0,8,16,24,32,
	264,272,280,288,296,
	528,536,544,552,560,
	792,800,808,816,824,
	1056,1064,1072,1080,1088
]
#the indices required to create a 32x32 quad mesh with no direction at LOD3
var ind03 : PackedInt32Array = [
	0,6,5,0,1,6,1,2,6,2,7,6,2,8,7,2,3,8,3,4,8,4,9,8,
	5,6,10,6,11,10,6,12,11,6,7,12,7,8,12,8,13,12,8,14,13,8,9,14,
	10,16,15,10,11,16,11,12,16,12,17,16,12,18,17,12,13,18,13,14,18,14,19,18,
	15,16,20,16,21,20,16,22,21,16,17,22,17,18,22,18,23,22,18,24,23,18,19,24
]

#the vertices required to create a 32x32 quad mesh with no direction at LOD4
var vert04 : PackedInt32Array = [
	0,16,32,
	528,544,560,
	1056,1072,1088
]
#the indices required to create a 32x32 quad mesh with no direction at LOD4
var ind04 : PackedInt32Array = [
	0,4,3,0,1,4,1,2,4,2,5,4,
	3,4,6,4,7,6,4,8,7,4,5,8
]

#the vertices required to create a 32x32 quad mesh with no direction at LOD5
var vert05 : PackedInt32Array = [
	0,32,
	1056,1088
]
#the indices required to create a 32x32 quad mesh with no direction at LOD5
var ind05 : PackedInt32Array = [
	0,1,2,1,3,2
]

#hexadecimal lookup for which tris to draw between the edges of a cube in voxel terrain
var cube_edge_flags = [
	0x000, 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c, 0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00,
	0x190, 0x099, 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c, 0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90,
	0x230, 0x339, 0x033, 0x13a, 0x636, 0x73f, 0x435, 0x53c, 0xa3c, 0xb35, 0x83f, 0x936, 0xe3a, 0xf33, 0xc39, 0xd30,
	0x3a0, 0x2a9, 0x1a3, 0x0aa, 0x7a6, 0x6af, 0x5a5, 0x4ac, 0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0,
	0x460, 0x569, 0x663, 0x76a, 0x066, 0x16f, 0x265, 0x36c, 0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a, 0x963, 0xa69, 0xb60,
	0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0x0ff, 0x3f5, 0x2fc, 0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0,
	0x650, 0x759, 0x453, 0x55a, 0x256, 0x35f, 0x055, 0x15c, 0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53, 0x859, 0x950,
	0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0x0cc, 0xfcc, 0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0,
	0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc6, 0xdcf, 0xec5, 0xfcc, 0x0cc, 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9, 0x7c0,
	0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c, 0x15c, 0x055, 0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650,
	0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6, 0xfff, 0xcf5, 0xdfc, 0x2fc, 0x3f5, 0x0ff, 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0,
	0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c, 0x36c, 0x265, 0x16f, 0x066, 0x76a, 0x663, 0x569, 0x460,
	0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac, 0x4ac, 0x5a5, 0x6af, 0x7a6, 0x0aa, 0x1a3, 0x2a9, 0x3a0,
	0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c, 0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x033, 0x339, 0x230,
	0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c, 0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x099, 0x190,
	0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c, 0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x000
]

#lookup table containing the edges that are intersected by the isosurface
var tri_connection_table = [
	[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[0, 8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[9, 2, 10, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1, -1, -1, -1],
	[3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[1, 9, 0, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1, -1, -1, -1, -1],
	[3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1],
	[3, 9, 0, 3, 11, 9, 11, 10, 9, -1, -1, -1, -1, -1, -1],
	[9, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[0, 1, 9, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1],
	[1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1],
	[9, 2, 10, 9, 0, 2, 8, 4, 7, -1, -1, -1, -1, -1, -1],
	[2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1, -1, -1],
	[8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[11, 4, 7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1],
	[9, 0, 1, 8, 4, 7, 2, 3, 11, -1, -1, -1, -1, -1, -1],
	[4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1],
	[3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1],
	[1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, -1, -1, -1],
	[4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, -1, -1, -1],
	[4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1],
	[9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[9, 5, 4, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1],
	[1, 2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[3, 0, 8, 1, 2, 10, 4, 9, 5, -1, -1, -1, -1, -1, -1],
	[5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1],
	[2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1],
	[9, 5, 4, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[0, 11, 2, 0, 8, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1],
	[0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1, -1],
	[2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1],
	[10, 3, 11, 10, 1, 3, 9, 5, 4, -1, -1, -1, -1, -1, -1],
	[4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1, -1, -1],
	[5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1],
	[5, 4, 8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1],
	[9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1],
	[0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1],
	[1, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1, -1, -1, -1, -1],
	[10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1],
	[8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1],
	[2, 10, 5, 2, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1],
	[7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1],
	[9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1],
	[2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1, -1, -1],
	[11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1],
	[9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1],
	[5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0],
	[11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0],
	[11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[0, 8, 3, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[9, 0, 1, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1],
	[1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[1, 6, 5, 1, 2, 6, 3, 0, 8, -1, -1, -1, -1, -1, -1],
	[9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1],
	[5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1],
	[2, 3, 11, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[11, 0, 8, 11, 2, 0, 10, 6, 5, -1, -1, -1, -1, -1, -1],
	[0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, -1, -1],
	[5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1],
	[6, 3, 11, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1],
	[0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1, -1, -1],
	[3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1],
	[6, 5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1],
	[5, 10, 6, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1, -1, -1, -1],
	[1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1],
	[10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1],
	[6, 1, 2, 6, 5, 1, 4, 7, 8, -1, -1, -1, -1, -1, -1],
	[1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1],
	[8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1],
	[7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9],
	[3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1],
	[5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1],
	[0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, -1, -1, -1],
	[9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6],
	[8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1],
	[5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11],
	[0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7],
	[6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1],
	[10, 4, 9, 6, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1, -1, -1, -1, -1],
	[10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1],
	[8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1],
	[1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1],
	[3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1],
	[0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1],
	[10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1, -1, -1, -1, -1],
	[0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1],
	[3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1],
	[6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1],
	[9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1],
	[8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1],
	[3, 11, 6, 3, 6, 0, 0, 6, 4, -1, -1, -1, -1, -1, -1],
	[6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1],
	[0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1],
	[10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1],
	[10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1],
	[1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1],
	[2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9],
	[7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1],
	[7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, -1, -1, -1],
	[2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7],
	[1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11],
	[11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, -1, -1, -1],
	[8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6],
	[0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1],
	[7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[0, 1, 9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[8, 1, 9, 8, 3, 1, 11, 7, 6, -1, -1, -1, -1, -1, -1],
	[10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1],
	[2, 9, 0, 2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1],
	[6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, -1, -1, -1],
	[7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1],
	[2, 7, 6, 2, 3, 7, 0, 1, 9, -1, -1, -1, -1, -1, -1],
	[1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1, -1, -1],
	[10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1],
	[10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1],
	[0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, -1, -1, -1],
	[7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1, -1],
	[6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[3, 6, 11, 3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1],
	[8, 6, 11, 8, 4, 6, 9, 0, 1, -1, -1, -1, -1, -1, -1],
	[9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1],
	[6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1],
	[1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, -1, -1, -1],
	[4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1, -1, -1],
	[10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3],
	[8, 2, 3, 8, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1],
	[0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1],
	[1, 9, 4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1],
	[8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, -1, -1, -1],
	[10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1],
	[4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3],
	[10, 9, 4, 6, 10, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1],
	[5, 0, 1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1],
	[11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1, -1, -1],
	[9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1],
	[6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1],
	[7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, -1, -1, -1],
	[3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6],
	[7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1],
	[9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, -1, -1, -1],
	[3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1, -1, -1],
	[6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8],
	[9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, -1, -1, -1],
	[1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4],
	[4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10],
	[7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1],
	[6, 9, 5, 6, 11, 9, 11, 8, 9, -1, -1, -1, -1, -1, -1],
	[3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1],
	[0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1],
	[6, 11, 3, 6, 3, 5, 5, 3, 1, -1, -1, -1, -1, -1, -1],
	[1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1, -1, -1],
	[0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10],
	[11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5],
	[6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, -1, -1, -1],
	[5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1],
	[9, 5, 6, 9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1],
	[1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8],
	[1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6],
	[10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, -1, -1, -1],
	[0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[11, 5, 10, 7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[11, 5, 10, 11, 7, 5, 8, 3, 0, -1, -1, -1, -1, -1, -1],
	[5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1, -1, -1],
	[10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1],
	[11, 1, 2, 11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1],
	[0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, -1, -1, -1],
	[9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1],
	[7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2],
	[2, 5, 10, 2, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1],
	[8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1],
	[9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1],
	[9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2],
	[1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1],
	[9, 0, 3, 9, 3, 5, 5, 3, 7, -1, -1, -1, -1, -1, -1],
	[9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1],
	[5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1],
	[0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, -1, -1, -1],
	[10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4],
	[2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1],
	[0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11],
	[0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5],
	[9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1],
	[5, 10, 2, 5, 2, 4, 4, 2, 0, -1, -1, -1, -1, -1, -1],
	[3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9],
	[5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1],
	[8, 4, 5, 8, 5, 3, 3, 5, 1, -1, -1, -1, -1, -1, -1],
	[0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1],
	[9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[4, 11, 7, 4, 9, 11, 9, 10, 11, -1, -1, -1, -1, -1, -1],
	[0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1],
	[1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1],
	[3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4],
	[4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1, -1],
	[9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3],
	[11, 7, 4, 11, 4, 2, 2, 4, 0, -1, -1, -1, -1, -1, -1],
	[11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, -1, -1, -1],
	[2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1],
	[9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7],
	[3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10],
	[1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[4, 9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1],
	[4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, -1, -1, -1],
	[4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[9, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[3, 0, 9, 3, 9, 11, 11, 9, 10, -1, -1, -1, -1, -1, -1],
	[0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1, -1],
	[3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[1, 2, 11, 1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1],
	[3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, -1, -1, -1],
	[0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[2, 3, 8, 2, 8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1],
	[9, 10, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1],
	[1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
	[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
]

#the pairs of vertices that make up each edge of a cube
var edge_connection = [
	Vector2(0, 1), Vector2(1, 2), Vector2(2, 3), Vector2(3, 0),
	Vector2(4, 5), Vector2(5, 6), Vector2(6, 7), Vector2(7, 4),
	Vector2(0, 4), Vector2(1, 5), Vector2(2, 6), Vector2(3, 7)
]

#the offset of each vertex of a cube relative to the cube's origin
var cube_vert_offsets = [
	Vector3(0, 0, 0), Vector3(1, 0, 0), Vector3(1, 0, 1), Vector3(0, 0, 1), Vector3(0, 1, 0), Vector3(1, 1, 0), Vector3(1, 1, 1), Vector3(0, 1, 1)
]

#TODO: remove the _ before delta if timer is required
func _process(_delta):
	if player != null:
		var should_update_terrain = false
		current_player_pos.x = player.global_position.x
		current_player_pos.y = player.global_position.z
		if floor(current_player_pos.x / float(quad_size)) != floor(prev_player_pos.x / float(quad_size)):
			should_update_terrain = true
		if floor(current_player_pos.y / float(quad_size)) != floor(prev_player_pos.y / float(quad_size)):
			should_update_terrain = true
		if should_update_terrain:
			#print("updating terrain - glblscrpt")
			should_update_terrain = false
			prev_player_pos = current_player_pos
			if terrain_manager != null:
				terrain_manager.update_terrain(current_player_pos)
			#else:
				#print("no terrain manager registered")
		#tell the water manager to update the water around the player	
		#based on the player's location and quadrant in the quad
	#else:
		#print("no player registered")	

#func find_player_quadrant(p_pos) -> String :
	#var in_east_quadrant = true
	#var in_north_quadrant = true
	#if p_pos.x > 0.0 and int(p_pos.x) % tile_size < (tile_size / 2):
		#in_east_quadrant = false
	#if p_pos.x < 0.0 and int(abs(p_pos.x)) % tile_size > (tile_size / 2):
		#in_east_quadrant = false
	#if p_pos.z > 0.0 and int(p_pos.z) % tile_size > (tile_size / 2):
		#in_north_quadrant = false
	#if p_pos.z < 0.0 and int(abs(p_pos.z)) % tile_size < (tile_size / 2):
		#in_north_quadrant = false
	#if in_north_quadrant and in_east_quadrant:
		#return "ne"
	#if !in_north_quadrant and in_east_quadrant:
		#return "se"
	#if !in_north_quadrant and !in_east_quadrant:
		#return "sw"
	#return "nw"
	

			
